#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>

const char* ssid = "Hieu_ne";       // Thay b·∫±ng WiFi c·ªßa b·∫°n
const char* password = "thuycute"; 

ESP8266WebServer server(80);  // Kh·ªüi t·∫°o Web Server

#define BUZZER_PIN 14  // Ch√¢n D5 (GPIO14) cho c√≤i
#define RELAY_PIN 12   // Ch√¢n D6 (GPIO12) cho relay phun n∆∞·ªõc

void setup() {
    Serial.begin(115200);
    WiFi.begin(ssid, password);
    pinMode(BUZZER_PIN, OUTPUT);
    pinMode(RELAY_PIN, OUTPUT);
    
    digitalWrite(BUZZER_PIN, LOW);  // Ban ƒë·∫ßu t·∫Øt c√≤i
    digitalWrite(RELAY_PIN, LOW);   // Ban ƒë·∫ßu t·∫Øt relay

    // Ch·ªù k·∫øt n·ªëi WiFi
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }
    Serial.println("\nWiFi Connected!");
    Serial.print("ESP IP Address: ");
    Serial.println(WiFi.localIP());

    // Khai b√°o endpoint
    server.on("/alert", handleAlert);
    server.on("/normal", handleNormal);
    server.on("/spray", handleSpray);
    
    server.begin();
}

void loop() {
    server.handleClient();
}

// üîä B·∫≠t c√≤i b√°o ƒë·ªông
void handleAlert() {
    digitalWrite(BUZZER_PIN, HIGH);
    Serial.println("üö® C·∫£nh b√°o: B·∫≠t c√≤i!");
    server.send(200, "text/plain", "Buzzer ON");
}

// ‚úÖ T·∫Øt c√≤i b√°o ƒë·ªông
void handleNormal() {
    digitalWrite(BUZZER_PIN, LOW);
    Serial.println("‚úÖ Tr·∫°ng th√°i b√¨nh th∆∞·ªùng: T·∫Øt c√≤i.");
    server.send(200, "text/plain", "Buzzer OFF");
}

// üí¶ K√≠ch ho·∫°t phun n∆∞·ªõc trong 15s
void handleSpray() {
    Serial.println("üí¶ K√≠ch ho·∫°t phun n∆∞·ªõc trong 15 gi√¢y!");
    digitalWrite(RELAY_PIN, HIGH);
    delay(15000);  // Gi·ªØ relay b·∫≠t 15 gi√¢y
    digitalWrite(RELAY_PIN, LOW);
    Serial.println("üíß T·∫Øt phun n∆∞·ªõc.");
    server.send(200, "text/plain", "Spray Activated");
}
